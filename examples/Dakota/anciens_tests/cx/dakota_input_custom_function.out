Dakota version 6.2 released May 15 2015.
Subversion revision 3394 built Oct 13 2015 16:44:57.
Running serial Dakota executable in serial mode.
Start time: Tue Dec  1 14:47:05 2015

-------------------------------
Begin DAKOTA input file
dakota_input_custom_function.in
-------------------------------
environment,
	graphics
	tabular_graphics_data
	tabular_graphics_file = 'optim_res.dat'

method,
    #optpp_pds
    #coliny_cobyla
	#coliny_direct
	#hybrid collaborative optpp_q_newton
	#efficient_global
	#optpp_fd_newton
	optpp_q_newton
	#optpp_newton
     	max_iterations = 50           
     	convergence_tolerance = 1e-4 
	

variables,
	continuous_design = 15
	initial_point  0.0  0.0  0.0  0.0  0.0  0.4  0.4  0.4  0.4  0.4  0.12  0.12  0.12  0.12  0.12
	descriptors     'm1' 'm2' 'm3' 'm4' 'm5' 'p1' 'p2' 'p3' 'p4' 'p5' 't1' 't2' 't3' 't4' 't5'

interface,
	system
	analysis_driver = 'python myfunc.py'

responses,
	objective_functions = 1	
	descriptors = 'my_function'
	numerical_gradients
	#no_gradients
	no_hessians
	#numerical_hessians
---------------------
End DAKOTA input file
---------------------

Using Dakota input file 'dakota_input_custom_function.in'
Writing new restart file dakota.rst

>>>>> Executing environment.

>>>>> Running optpp_q_newton iterator.

------------------------------------------
Begin Dakota derivative estimation routine
------------------------------------------

>>>>> Initial map for analytic portion of response:

---------------------
Begin Evaluation    1
---------------------
Parameters for evaluation 1:
                      0.0000000000e+00 m1
                      0.0000000000e+00 m2
                      0.0000000000e+00 m3
                      0.0000000000e+00 m4
                      0.0000000000e+00 m5
                      4.0000000000e-01 p1
                      4.0000000000e-01 p2
                      4.0000000000e-01 p3
                      4.0000000000e-01 p4
                      4.0000000000e-01 p5
                      1.2000000000e-01 t1
                      1.2000000000e-01 t2
                      1.2000000000e-01 t3
                      1.2000000000e-01 t4
                      1.2000000000e-01 t5

python myfunc.py /tmp/dakota_params_85a14e34 /tmp/dakota_results_63dde4f8
